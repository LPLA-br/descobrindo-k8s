# APLICAÇÃO: notas demonstrativas
# history
# 1.Ambiente: página exemplo 0.0.0 OK
# 2.Versão 0.2.0
#   1. criação de notas sem título.
#   2. visualização crua de notas.
# 3.Versão 0.2.1
#   · visualização organizada de notas 


# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aplicacao-web
  namespace: dev
  labels:
    app.kubernetes.io/name: aplicacao-web
    app.kubernetes.io/version: "0.2.0"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: aplicacao-web
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aplicacao-web
    spec: # pod de dois conteineres
      containers:
      - name: server-mvc
        image: node/aplicacao-web:0.2.0
        ports:
          - containerPort: 8080
        env:
        - name: HOST
          value: "127.0.0.1"
        - name: PORTATCP
          value: "3306"
        - name: USUARIO
          value: "appusr"
        - name: PASSWORD # necessita de mais segurança de credenciais. Vide: secrets
          value: "apppas"
        - name: BANCODEDADOS
          value: "appdb"
      - name: mysql-data
        volumeMounts:
          - name: aplicacao-web-pv
            mountPath: "/var/lib/mysql"
        image: mysql:latest
        ports:
          - name: "http-app"
            containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        - name: MYSQL_DATABASE
          value: "appdb"
        - name: MYSQL_USER
          value: "appusr"
        - name: MYSQL_PASSWORD
          value: "apppas"
      volumes:
        - name: aplicacao-web-pv
          persistentVolumeClaim:
            claimName: aplicacao-web-pvc

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: app-servico
  namespace: dev
  labels:
    app.kubernetes.io/name: aplicacao-web
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: aplicacao-web
  ports:
  - name: http
    protocol: TCP
    port: 8080        # a porta deste serviço (por coveniência a mesma de baixo)
    targetPort: 8080  # porta que a aplicação serve em seu container
    nodePort: 30007   # porta de node(s) para tráfego vindo de fora do cluster
---
#PersistentVolume do tipo HostPath
apiVersion: v1
kind: PersistentVolume
metadata:
  name: aplicacao-web-pv
  namespace: dev
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data" # path no container minikube executando no teu host pessoal
---
#PersistentVolumeClaim
#Pods utilizam este objeto para requisitar armazenamento físico
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aplicacao-web-pvc
  namespace: dev
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce #leitura e escrita para um node apenas
  resources:
    requests:
      storage: 1Gi

